import sys
input = sys.stdin.readline
의원정수 = 300
지역구국회의원 = 253
비례대표국회의원 = 47
P, V = map(int, input().split())
의석할당정당이아닌_정당_당선인수_총합 = 0
의석할당정당목록 = []
정당들 = {}
연동배분의석수 = {}
무소속_지역구의석수 = 지역구국회의원
의석할당정당_득표수_합계 = 0
for i in range(P) :
    정당명, 지역구의석수, 비례대표국회의원선거_득표수 = input().split()
    지역구의석수 = int(지역구의석수)
    비례대표국회의원선거_득표수 = int(비례대표국회의원선거_득표수)
    정당들[정당명] = (지역구의석수, 비례대표국회의원선거_득표수)
    무소속_지역구의석수 -= 지역구의석수
    if 비례대표국회의원선거_득표수/V >= 0.03 or 지역구의석수 >= 5 :
        의석할당정당_득표수_합계 += 비례대표국회의원선거_득표수
        의석할당정당목록.append((i, 정당명))
    else :
        의석할당정당이아닌_정당_당선인수_총합 += 지역구의석수
        연동배분의석수[정당명] = 0
# 1단계
NminusR = (의원정수 - (의석할당정당이아닌_정당_당선인수_총합+무소속_지역구의석수))
연동배분의석수_합계 = 0
for _, 정당명 in 의석할당정당목록 :
    r, 비례대표국회의원선거_득표수 = 정당들[정당명]
    p = 비례대표국회의원선거_득표수 / 의석할당정당_득표수_합계
    결과값 = ((NminusR * p) - r) / 2
    if 결과값 < 1 :
        결과값 = 0
    else :
        결과값 = int(round(결과값))
    연동배분의석수[정당명] = 결과값
    연동배분의석수_합계 += 결과값
# 2단계
if 연동배분의석수_합계 != 30 :
    queue = []
    연동배분의석수_합계2 = 0
    for 기호, 정당명 in 의석할당정당목록 :
        _, 비례대표국회의원선거_득표수 = 정당들[정당명]
        if 연동배분의석수_합계 < 30 :
            p = 비례대표국회의원선거_득표수 / 의석할당정당_득표수_합계
            s = 연동배분의석수[정당명] + (30-연동배분의석수_합계)*p
        else :
            s = (30*연동배분의석수[정당명])/연동배분의석수_합계
        연동배분의석수[정당명] = int(s)
        연동배분의석수_합계2 += int(s)
        queue.append((s%1, 기호, 정당명))
    queue.sort(key=lambda x: (-x[0], x[1]))
    for i in range(30-연동배분의석수_합계2) :
        _, _, 정당명 = queue[i]
        연동배분의석수[정당명] += 1
# 3단계
queue = []
연동배분의석수_합계 = 0
for 기호, 정당명 in 의석할당정당목록 :
    _, 비례대표국회의원선거_득표수 = 정당들[정당명]
    p = 비례대표국회의원선거_득표수 / 의석할당정당_득표수_합계
    t = 17*p
    연동배분의석수[정당명] += int(t)
    연동배분의석수_합계 += int(t)
    queue.append((t%1, 기호, 정당명))
queue.sort(key=lambda x: (-x[0], x[1]))

for i in range(17-연동배분의석수_합계) :
    _, _, 정당명 = queue[i]
    연동배분의석수[정당명] += 1
# 마지막
결과 = []
for 정당명, 값 in 정당들.items() :
    지역구의석수, _ = 값
    비례의석 = 연동배분의석수[정당명]
    결과.append((지역구의석수+비례의석, 정당명))
결과.sort(key=lambda x: (-x[0], x[1]))
[print(정당명, 의석수) for 의석수, 정당명 in 결과]